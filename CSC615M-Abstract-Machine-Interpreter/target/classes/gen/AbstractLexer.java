// Generated from java-escape by ANTLR 4.11.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class AbstractLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		DATA=1, LOGIC=2, STACK_NAME=3, QUEUE_NAME=4, TAPE_NAME=5, STACK=6, QUEUE=7, 
		TAPE=8, COMMAND=9, I_O=10, STATE_NAME=11, TERMINATE=12, READ=13, WRITE=14, 
		LEFT=15, RIGHT=16, NEWLINE=17, WHITESPACE=18, COMMA=19, LPRNTHS=20, RPRNTHS=21, 
		RSBRCKT=22, FRWRDSLASH=23;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"S", "Q", "T", "NUMBER", "UPPERCASE", "LOWERCASE", "SHARP", "DATA", "LOGIC", 
			"STACK_NAME", "QUEUE_NAME", "TAPE_NAME", "STACK", "QUEUE", "TAPE", "COMMAND", 
			"I_O", "STATE_NAME", "TERMINATE", "READ", "WRITE", "LEFT", "RIGHT", "NEWLINE", 
			"WHITESPACE", "COMMA", "LPRNTHS", "RPRNTHS", "RSBRCKT", "FRWRDSLASH"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'.DATA'", "'.LOGIC'", null, null, null, "'STACK'", "'QUEUE'", 
			"'TAPE'", null, null, null, null, null, null, null, null, null, null, 
			null, "'('", "')'", "']'", "'/'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "DATA", "LOGIC", "STACK_NAME", "QUEUE_NAME", "TAPE_NAME", "STACK", 
			"QUEUE", "TAPE", "COMMAND", "I_O", "STATE_NAME", "TERMINATE", "READ", 
			"WRITE", "LEFT", "RIGHT", "NEWLINE", "WHITESPACE", "COMMA", "LPRNTHS", 
			"RPRNTHS", "RSBRCKT", "FRWRDSLASH"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	    String lastToken;
	    public void emit(Token token) {
	        super.emit(token);
	        lastTokenType = token.getText();
	    }


	public AbstractLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AbstractLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 16:
			return I_O_sempred((RuleContext)_localctx, predIndex);
		case 17:
			return STATE_NAME_sempred((RuleContext)_localctx, predIndex);
		case 25:
			return COMMA_sempred((RuleContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean I_O_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0:
			return _input.LA(-1) == '(' || _input.LA(-1) == '/';
		}
		return true;
	}
	private boolean STATE_NAME_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1:
			return _input.LA(1) == ']' || _input.LA(1) == ')';
		}
		return true;
	}
	private boolean COMMA_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2:
			return _input.LA(1) == 'EOF';
		}
		return true;
	}

	public static final String _serializedATN =
		"\u0004\u0000\u0017\u0105\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\t\u0001\t\u0004\t[\b\t\u000b\t\f\t\\\u0001\n\u0001\n"+
		"\u0004\na\b\n\u000b\n\f\nb\u0001\u000b\u0001\u000b\u0004\u000bg\b\u000b"+
		"\u000b\u000b\f\u000bh\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f"+
		"\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0003\u000f"+
		"\u009c\b\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0003\u0010\u00a3\b\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011"+
		"\u0004\u0011\u00af\b\u0011\u000b\u0011\f\u0011\u00b0\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0003\u0012\u00bf"+
		"\b\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0003\u0013\u00c9\b\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0003\u0014\u00d6\b\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0004\u0017\u00ee\b\u0017\u000b"+
		"\u0017\f\u0017\u00ef\u0001\u0017\u0001\u0017\u0001\u0018\u0004\u0018\u00f5"+
		"\b\u0018\u000b\u0018\f\u0018\u00f6\u0001\u0018\u0001\u0018\u0001\u0019"+
		"\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b"+
		"\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0000\u0000\u001e\u0001"+
		"\u0000\u0003\u0000\u0005\u0000\u0007\u0000\t\u0000\u000b\u0000\r\u0000"+
		"\u000f\u0001\u0011\u0002\u0013\u0003\u0015\u0004\u0017\u0005\u0019\u0006"+
		"\u001b\u0007\u001d\b\u001f\t!\n#\u000b%\f\'\r)\u000e+\u000f-\u0010/\u0011"+
		"1\u00123\u00135\u00147\u00159\u0016;\u0017\u0001\u0000\u0005\u0001\u0000"+
		"09\u0001\u0000AZ\u0001\u0000az\u0002\u0000\n\n\r\r\u0002\u0000\t\t  \u0114"+
		"\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000"+
		"\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000"+
		"\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000"+
		"\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000"+
		"\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000"+
		"#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001"+
		"\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000"+
		"\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000"+
		"1\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001"+
		"\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000"+
		"\u0000\u0000;\u0001\u0000\u0000\u0000\u0001=\u0001\u0000\u0000\u0000\u0003"+
		"?\u0001\u0000\u0000\u0000\u0005A\u0001\u0000\u0000\u0000\u0007C\u0001"+
		"\u0000\u0000\u0000\tE\u0001\u0000\u0000\u0000\u000bG\u0001\u0000\u0000"+
		"\u0000\rI\u0001\u0000\u0000\u0000\u000fK\u0001\u0000\u0000\u0000\u0011"+
		"Q\u0001\u0000\u0000\u0000\u0013X\u0001\u0000\u0000\u0000\u0015^\u0001"+
		"\u0000\u0000\u0000\u0017d\u0001\u0000\u0000\u0000\u0019j\u0001\u0000\u0000"+
		"\u0000\u001bp\u0001\u0000\u0000\u0000\u001dv\u0001\u0000\u0000\u0000\u001f"+
		"\u009b\u0001\u0000\u0000\u0000!\u009d\u0001\u0000\u0000\u0000#\u00a4\u0001"+
		"\u0000\u0000\u0000%\u00be\u0001\u0000\u0000\u0000\'\u00c0\u0001\u0000"+
		"\u0000\u0000)\u00cc\u0001\u0000\u0000\u0000+\u00d9\u0001\u0000\u0000\u0000"+
		"-\u00e2\u0001\u0000\u0000\u0000/\u00ed\u0001\u0000\u0000\u00001\u00f4"+
		"\u0001\u0000\u0000\u00003\u00fa\u0001\u0000\u0000\u00005\u00fd\u0001\u0000"+
		"\u0000\u00007\u00ff\u0001\u0000\u0000\u00009\u0101\u0001\u0000\u0000\u0000"+
		";\u0103\u0001\u0000\u0000\u0000=>\u0005S\u0000\u0000>\u0002\u0001\u0000"+
		"\u0000\u0000?@\u0005Q\u0000\u0000@\u0004\u0001\u0000\u0000\u0000AB\u0005"+
		"T\u0000\u0000B\u0006\u0001\u0000\u0000\u0000CD\u0007\u0000\u0000\u0000"+
		"D\b\u0001\u0000\u0000\u0000EF\u0007\u0001\u0000\u0000F\n\u0001\u0000\u0000"+
		"\u0000GH\u0007\u0002\u0000\u0000H\f\u0001\u0000\u0000\u0000IJ\u0005#\u0000"+
		"\u0000J\u000e\u0001\u0000\u0000\u0000KL\u0005.\u0000\u0000LM\u0005D\u0000"+
		"\u0000MN\u0005A\u0000\u0000NO\u0005T\u0000\u0000OP\u0005A\u0000\u0000"+
		"P\u0010\u0001\u0000\u0000\u0000QR\u0005.\u0000\u0000RS\u0005L\u0000\u0000"+
		"ST\u0005O\u0000\u0000TU\u0005G\u0000\u0000UV\u0005I\u0000\u0000VW\u0005"+
		"C\u0000\u0000W\u0012\u0001\u0000\u0000\u0000XZ\u0003\u0001\u0000\u0000"+
		"Y[\u0003\u0007\u0003\u0000ZY\u0001\u0000\u0000\u0000[\\\u0001\u0000\u0000"+
		"\u0000\\Z\u0001\u0000\u0000\u0000\\]\u0001\u0000\u0000\u0000]\u0014\u0001"+
		"\u0000\u0000\u0000^`\u0003\u0003\u0001\u0000_a\u0003\u0007\u0003\u0000"+
		"`_\u0001\u0000\u0000\u0000ab\u0001\u0000\u0000\u0000b`\u0001\u0000\u0000"+
		"\u0000bc\u0001\u0000\u0000\u0000c\u0016\u0001\u0000\u0000\u0000df\u0003"+
		"\u0005\u0002\u0000eg\u0003\u0007\u0003\u0000fe\u0001\u0000\u0000\u0000"+
		"gh\u0001\u0000\u0000\u0000hf\u0001\u0000\u0000\u0000hi\u0001\u0000\u0000"+
		"\u0000i\u0018\u0001\u0000\u0000\u0000jk\u0005S\u0000\u0000kl\u0005T\u0000"+
		"\u0000lm\u0005A\u0000\u0000mn\u0005C\u0000\u0000no\u0005K\u0000\u0000"+
		"o\u001a\u0001\u0000\u0000\u0000pq\u0005Q\u0000\u0000qr\u0005U\u0000\u0000"+
		"rs\u0005E\u0000\u0000st\u0005U\u0000\u0000tu\u0005E\u0000\u0000u\u001c"+
		"\u0001\u0000\u0000\u0000vw\u0005T\u0000\u0000wx\u0005A\u0000\u0000xy\u0005"+
		"P\u0000\u0000yz\u0005E\u0000\u0000z\u001e\u0001\u0000\u0000\u0000{|\u0005"+
		"S\u0000\u0000|}\u0005C\u0000\u0000}~\u0005A\u0000\u0000~\u009c\u0005N"+
		"\u0000\u0000\u007f\u0080\u0005P\u0000\u0000\u0080\u0081\u0005R\u0000\u0000"+
		"\u0081\u0082\u0005I\u0000\u0000\u0082\u0083\u0005N\u0000\u0000\u0083\u009c"+
		"\u0005T\u0000\u0000\u0084\u0085\u0005S\u0000\u0000\u0085\u0086\u0005C"+
		"\u0000\u0000\u0086\u0087\u0005A\u0000\u0000\u0087\u0088\u0005N\u0000\u0000"+
		"\u0088\u0089\u0005 \u0000\u0000\u0089\u008a\u0005R\u0000\u0000\u008a\u008b"+
		"\u0005I\u0000\u0000\u008b\u008c\u0005G\u0000\u0000\u008c\u008d\u0005H"+
		"\u0000\u0000\u008d\u009c\u0005T\u0000\u0000\u008e\u008f\u0005S\u0000\u0000"+
		"\u008f\u0090\u0005C\u0000\u0000\u0090\u0091\u0005A\u0000\u0000\u0091\u0092"+
		"\u0005N\u0000\u0000\u0092\u0093\u0005 \u0000\u0000\u0093\u0094\u0005L"+
		"\u0000\u0000\u0094\u0095\u0005E\u0000\u0000\u0095\u0096\u0005F\u0000\u0000"+
		"\u0096\u009c\u0005T\u0000\u0000\u0097\u009c\u0003\'\u0013\u0000\u0098"+
		"\u009c\u0003)\u0014\u0000\u0099\u009c\u0003+\u0015\u0000\u009a\u009c\u0003"+
		"-\u0016\u0000\u009b{\u0001\u0000\u0000\u0000\u009b\u007f\u0001\u0000\u0000"+
		"\u0000\u009b\u0084\u0001\u0000\u0000\u0000\u009b\u008e\u0001\u0000\u0000"+
		"\u0000\u009b\u0097\u0001\u0000\u0000\u0000\u009b\u0098\u0001\u0000\u0000"+
		"\u0000\u009b\u0099\u0001\u0000\u0000\u0000\u009b\u009a\u0001\u0000\u0000"+
		"\u0000\u009c \u0001\u0000\u0000\u0000\u009d\u00a2\u0004\u0010\u0000\u0000"+
		"\u009e\u00a3\u0003\u000b\u0005\u0000\u009f\u00a3\u0003\t\u0004\u0000\u00a0"+
		"\u00a3\u0003\u0007\u0003\u0000\u00a1\u00a3\u0003\r\u0006\u0000\u00a2\u009e"+
		"\u0001\u0000\u0000\u0000\u00a2\u009f\u0001\u0000\u0000\u0000\u00a2\u00a0"+
		"\u0001\u0000\u0000\u0000\u00a2\u00a1\u0001\u0000\u0000\u0000\u00a3\"\u0001"+
		"\u0000\u0000\u0000\u00a4\u00ae\u0004\u0011\u0001\u0000\u00a5\u00a6\u0003"+
		"\t\u0004\u0000\u00a6\u00a7\u0003\u0007\u0003\u0000\u00a7\u00af\u0001\u0000"+
		"\u0000\u0000\u00a8\u00a9\u0003\u000b\u0005\u0000\u00a9\u00aa\u0003\u0007"+
		"\u0003\u0000\u00aa\u00af\u0001\u0000\u0000\u0000\u00ab\u00af\u0003\t\u0004"+
		"\u0000\u00ac\u00af\u0003\u000b\u0005\u0000\u00ad\u00af\u0003%\u0012\u0000"+
		"\u00ae\u00a5\u0001\u0000\u0000\u0000\u00ae\u00a8\u0001\u0000\u0000\u0000"+
		"\u00ae\u00ab\u0001\u0000\u0000\u0000\u00ae\u00ac\u0001\u0000\u0000\u0000"+
		"\u00ae\u00ad\u0001\u0000\u0000\u0000\u00af\u00b0\u0001\u0000\u0000\u0000"+
		"\u00b0\u00ae\u0001\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000"+
		"\u00b1$\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005a\u0000\u0000\u00b3\u00b4"+
		"\u0005c\u0000\u0000\u00b4\u00b5\u0005c\u0000\u0000\u00b5\u00b6\u0005e"+
		"\u0000\u0000\u00b6\u00b7\u0005p\u0000\u0000\u00b7\u00bf\u0005t\u0000\u0000"+
		"\u00b8\u00b9\u0005r\u0000\u0000\u00b9\u00ba\u0005e\u0000\u0000\u00ba\u00bb"+
		"\u0005j\u0000\u0000\u00bb\u00bc\u0005e\u0000\u0000\u00bc\u00bd\u0005c"+
		"\u0000\u0000\u00bd\u00bf\u0005t\u0000\u0000\u00be\u00b2\u0001\u0000\u0000"+
		"\u0000\u00be\u00b8\u0001\u0000\u0000\u0000\u00bf&\u0001\u0000\u0000\u0000"+
		"\u00c0\u00c1\u0005R\u0000\u0000\u00c1\u00c2\u0005E\u0000\u0000\u00c2\u00c3"+
		"\u0005A\u0000\u0000\u00c3\u00c4\u0005D\u0000\u0000\u00c4\u00c5\u0005("+
		"\u0000\u0000\u00c5\u00c8\u0001\u0000\u0000\u0000\u00c6\u00c9\u0003\u0013"+
		"\t\u0000\u00c7\u00c9\u0003\u0015\n\u0000\u00c8\u00c6\u0001\u0000\u0000"+
		"\u0000\u00c8\u00c7\u0001\u0000\u0000\u0000\u00c9\u00ca\u0001\u0000\u0000"+
		"\u0000\u00ca\u00cb\u0005)\u0000\u0000\u00cb(\u0001\u0000\u0000\u0000\u00cc"+
		"\u00cd\u0005W\u0000\u0000\u00cd\u00ce\u0005R\u0000\u0000\u00ce\u00cf\u0005"+
		"I\u0000\u0000\u00cf\u00d0\u0005T\u0000\u0000\u00d0\u00d1\u0005E\u0000"+
		"\u0000\u00d1\u00d2\u0005(\u0000\u0000\u00d2\u00d5\u0001\u0000\u0000\u0000"+
		"\u00d3\u00d6\u0003\u0013\t\u0000\u00d4\u00d6\u0003\u0015\n\u0000\u00d5"+
		"\u00d3\u0001\u0000\u0000\u0000\u00d5\u00d4\u0001\u0000\u0000\u0000\u00d6"+
		"\u00d7\u0001\u0000\u0000\u0000\u00d7\u00d8\u0005)\u0000\u0000\u00d8*\u0001"+
		"\u0000\u0000\u0000\u00d9\u00da\u0005L\u0000\u0000\u00da\u00db\u0005E\u0000"+
		"\u0000\u00db\u00dc\u0005F\u0000\u0000\u00dc\u00dd\u0005T\u0000\u0000\u00dd"+
		"\u00de\u0005(\u0000\u0000\u00de\u00df\u0001\u0000\u0000\u0000\u00df\u00e0"+
		"\u0003\u0017\u000b\u0000\u00e0\u00e1\u0005)\u0000\u0000\u00e1,\u0001\u0000"+
		"\u0000\u0000\u00e2\u00e3\u0005R\u0000\u0000\u00e3\u00e4\u0005I\u0000\u0000"+
		"\u00e4\u00e5\u0005G\u0000\u0000\u00e5\u00e6\u0005H\u0000\u0000\u00e6\u00e7"+
		"\u0005T\u0000\u0000\u00e7\u00e8\u0005(\u0000\u0000\u00e8\u00e9\u0001\u0000"+
		"\u0000\u0000\u00e9\u00ea\u0003\u0017\u000b\u0000\u00ea\u00eb\u0005)\u0000"+
		"\u0000\u00eb.\u0001\u0000\u0000\u0000\u00ec\u00ee\u0007\u0003\u0000\u0000"+
		"\u00ed\u00ec\u0001\u0000\u0000\u0000\u00ee\u00ef\u0001\u0000\u0000\u0000"+
		"\u00ef\u00ed\u0001\u0000\u0000\u0000\u00ef\u00f0\u0001\u0000\u0000\u0000"+
		"\u00f0\u00f1\u0001\u0000\u0000\u0000\u00f1\u00f2\u0006\u0017\u0000\u0000"+
		"\u00f20\u0001\u0000\u0000\u0000\u00f3\u00f5\u0007\u0004\u0000\u0000\u00f4"+
		"\u00f3\u0001\u0000\u0000\u0000\u00f5\u00f6\u0001\u0000\u0000\u0000\u00f6"+
		"\u00f4\u0001\u0000\u0000\u0000\u00f6\u00f7\u0001\u0000\u0000\u0000\u00f7"+
		"\u00f8\u0001\u0000\u0000\u0000\u00f8\u00f9\u0006\u0018\u0000\u0000\u00f9"+
		"2\u0001\u0000\u0000\u0000\u00fa\u00fb\u0004\u0019\u0002\u0000\u00fb\u00fc"+
		"\u0005,\u0000\u0000\u00fc4\u0001\u0000\u0000\u0000\u00fd\u00fe\u0005("+
		"\u0000\u0000\u00fe6\u0001\u0000\u0000\u0000\u00ff\u0100\u0005)\u0000\u0000"+
		"\u01008\u0001\u0000\u0000\u0000\u0101\u0102\u0005]\u0000\u0000\u0102:"+
		"\u0001\u0000\u0000\u0000\u0103\u0104\u0005/\u0000\u0000\u0104<\u0001\u0000"+
		"\u0000\u0000\r\u0000\\bh\u009b\u00a2\u00ae\u00b0\u00be\u00c8\u00d5\u00ef"+
		"\u00f6\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}